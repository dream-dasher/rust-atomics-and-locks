# rustfmt.toml
## web description of options:
## https://rust-lang.github.io/rustfmt/?version=master&search=

# required_version   # specify rustfmt version requirement
# ignore = []        # files for rustfmt to ignore

## meta-config
style_edition = "2024"

## general spacing
max_width = 120
tab_spaces = 8                       # legible groups! :)
array_width = 120                    # arrays
attr_fn_like_width = 120             # attributes
fn_call_width = 120                  # function calls
struct_lit_width = 120               # raw struct instantiation
struct_variant_width = 120           # enum struct variant instantiation
single_line_if_else_max_width = 120  # ¡doesn't always work!
single_line_let_else_max_width = 120 # ¡doesn't always work!

## struct/enum related
# use_field_init_shorthand = true   #  some_struct {x: var, y: y, z: z} ~~> some_struct {x: var, y, z}


# -------------------------------------------------------------------------------------------------------------------- #
##                                              -Unstable-
## `cargo +nightly fmt`

# unstable_features = true

##  general spacing (unstable)
# fn_single_line = true              # creates false "unnecessary braces" lint

## import organization (unstable)
# imports_granularity = "Crate"      # group all imports for a crate together
# group_imports = "StdExternalCrate" # category style grouping of imports (ala isort in python)
# imports_indent = "Visual"

## struct/enum related (unstable)
# struct_field_align_threshold = 40 # move distance to seek type alignment in struct fields
# enum_discrim_align_threshold = 40 # move distance to seek type alignment in enum discriminants

## impl organization (unstable)
# reorder_impl_items = true # assoc_type & const at top of impl

## macros (unstable)
# format_macro_bodies = false
